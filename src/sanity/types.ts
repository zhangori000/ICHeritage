/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type Brand = {
  _id: string;
  _type: "brand";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  kicker?: string;
  headline?: string;
  subhead?: string;
  themeColor?: Color;
  textColor?: Color;
  imageOverlayStrength?: number;
  primaryCta?: {
    label?: string;
    href?: string;
  };
  secondaryCta?: {
    label?: string;
    href?: string;
  };
  heroImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  logo?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  footnote?: string;
  promoLink?: {
    href?: string;
    label?: string;
  };
};

export type VolunteerOpportunity = {
  _id: string;
  _type: "volunteerOpportunity";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  summary?: string;
  trackLabel?: string;
  commitmentSummary?: string;
  location?: string;
  openings?: number;
  experienceLevel?: string;
  isUrgent?: boolean;
  isRemoteFriendly?: boolean;
  heroImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  applyUrl?: string;
  responsibilities?: Array<string>;
  qualifications?: Array<string>;
  benefits?: Array<string>;
  applicationProcess?: Array<{
    title?: string;
    description?: string;
    _type: "step";
    _key: string;
  }>;
  contact?: {
    ctaLabel?: string;
    instructions?: string;
    email?: string;
    phone?: string;
    responseNote?: string;
  };
  body?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      newTab?: boolean;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
    _key: string;
  } | {
    filename?: string;
    language?: "javascript" | "typescript" | "json" | "shell" | "markdown";
    code?: string;
    _type: "codeBlock";
    _key: string;
  } | {
    style?: string;
    _type: "divider";
    _key: string;
  }>;
};

export type WorkshopCategory = {
  _id: string;
  _type: "workshopCategory";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  icon?: string;
  description?: string;
};

export type Workshop = {
  _id: string;
  _type: "workshop";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  summary?: string;
  categories?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "workshopCategory";
  }>;
  start?: string;
  end?: string;
  location?: string;
  capacity?: number;
  registeredCount?: number;
  needsVolunteers?: boolean;
  registerUrl?: string;
  volunteerUrl?: string;
  heroImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  hosts?: Array<{
    name?: string;
    role?: string;
    avatar?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
    socialLinks?: Array<{
      label?: string;
      url?: string;
      _type: "link";
      _key: string;
    }>;
    _type: "host";
    _key: string;
  }>;
  contact?: {
    ctaLabel?: string;
    instructions?: string;
    email?: string;
    phone?: string;
    responseNote?: string;
  };
  externalLinks?: Array<{
    label?: string;
    href?: string;
    _type: "link";
    _key: string;
  }>;
  body?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      newTab?: boolean;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
    _key: string;
  } | {
    filename?: string;
    language?: "javascript" | "typescript" | "json" | "shell" | "markdown";
    code?: string;
    _type: "codeBlock";
    _key: string;
  } | {
    style?: string;
    _type: "divider";
    _key: string;
  }>;
};

export type ColorChoice = {
  _type: "colorChoice";
  token?: "foreground" | "primary" | "muted-foreground" | "white" | "black";
  customHex?: string;
};

export type HeroBanner = {
  _type: "heroBanner";
  background?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  overlayOpacity?: number;
  title?: string;
  titleColor?: Color;
  kicker?: string;
  kickerColor?: Color;
  body?: string;
  bodyColor?: Color;
  primaryCta?: {
    label?: string;
    href?: string;
  };
  secondaryCta?: {
    label?: string;
    href?: string;
  };
};

export type SiteSettings = {
  _id: string;
  _type: "siteSettings";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  homePage?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "page";
  };
  logo?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  orgName?: string;
  footerBlurb?: string;
  social?: {
    facebook?: string;
    twitter?: string;
    instagram?: string;
    youtube?: string;
  };
  quickLinks?: Array<{
    label?: string;
    href?: string;
    _key: string;
  }>;
  contactEmail?: string;
  contactPhone?: string;
  address?: Array<string>;
  newsletter?: {
    enabled?: boolean;
    blurb?: string;
  };
};

export type Newsletter = {
  _id: string;
  _type: "newsletter";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  issueLabel?: string;
  publishedAt?: string;
  readTime?: string;
  excerpt?: string;
  coverImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  body?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      newTab?: boolean;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
    _key: string;
  } | {
    filename?: string;
    language?: "javascript" | "typescript" | "json" | "shell" | "markdown";
    code?: string;
    _type: "codeBlock";
    _key: string;
  } | {
    style?: string;
    _type: "divider";
    _key: string;
  }>;
};

export type VolunteerApplication = {
  _type: "volunteerApplication";
  sectionId?: string;
  heading?: string;
  intro?: string;
  processHeading?: string;
  processSubheading?: string;
  steps?: Array<{
    title?: string;
    description?: string;
    timeEstimate?: string;
    _key: string;
  }>;
  requirementsHeading?: string;
  requirementsIntro?: string;
  requirements?: Array<string>;
  tracks?: Array<{
    title?: string;
    description?: string;
    tone?: "primary" | "secondary" | "accent";
    highlights?: Array<{
      icon?: "clock" | "users" | "calendar" | "map" | "sparkles" | "globe";
      label?: string;
      _key: string;
    }>;
    cta?: {
      label?: string;
      href?: string;
    };
    _key: string;
  }>;
  supportHeading?: string;
  supportBody?: string;
  supportLinks?: Array<{
    label?: string;
    href?: string;
    _key: string;
  }>;
};

export type VolunteerBenefits = {
  _type: "volunteerBenefits";
  sectionId?: string;
  heading?: string;
  intro?: string;
  benefits?: Array<{
    icon?: string;
    tone?: "primary" | "secondary" | "accent";
    title?: string;
    description?: string;
    points?: Array<string>;
    _type: "benefit";
    _key: string;
  }>;
  testimonialsHeading?: string;
  testimonialsIntro?: string;
  testimonials?: Array<{
    quote?: string;
    name?: string;
    role?: string;
    _type: "testimonial";
    _key: string;
  }>;
};

export type VolunteerTracks = {
  _type: "volunteerTracks";
  sectionId?: string;
  heading?: string;
  intro?: string;
  tracks?: Array<{
    badgeLabel?: string;
    tone?: "primary" | "secondary" | "accent" | "muted";
    icon?: string;
    title?: string;
    description?: string;
    keyAreasHeading?: string;
    keyAreas?: Array<string>;
    commitmentHeading?: string;
    commitmentItems?: Array<{
      icon?: string;
      text?: string;
      _type: "commitment";
      _key: string;
    }>;
    benefitsHeading?: string;
    benefits?: Array<string>;
    _type: "track";
    _key: string;
  }>;
  callout?: {
    heading?: string;
    body?: string;
    links?: Array<{
      label?: string;
      href?: string;
      _type: "link";
      _key: string;
    }>;
  };
};

export type BrandPromos = {
  _type: "brandPromos";
  sectionId?: string;
  heading?: string;
  intro?: string;
  brands?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "brand";
  }>;
};

export type VolunteersDirectory = {
  _type: "volunteersDirectory";
  sectionId?: string;
  heading?: string;
  intro?: string;
  searchPlaceholder?: string;
};

export type WorkshopsDirectory = {
  _type: "workshopsDirectory";
  sectionId?: string;
  heading?: string;
  intro?: string;
  searchPlaceholder?: string;
  categoryCards?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "workshopCategory";
  }>;
  showVolunteerBadge?: boolean;
};

export type PodcastHighlights = {
  _type: "podcastHighlights";
  sectionId?: string;
  heading?: string;
  intro?: string;
  episodes?: Array<{
    episodeLabel?: string;
    duration?: string;
    publishedAt?: string;
    title?: string;
    guestName?: string;
    guestTitle?: string;
    programTag?: string;
    summary?: string;
    heroImage?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
    youtubeUrl?: string;
    spotifyUrl?: string;
    appleUrl?: string;
    _key: string;
  }>;
  platformHeading?: string;
  platforms?: Array<{
    label?: string;
    href?: string;
    platform?: "spotify" | "apple" | "youtube" | "other";
    _key: string;
  }>;
  viewAllCta?: {
    label?: string;
    href?: string;
  };
};

export type LeadershipSection = {
  _type: "leadershipSection";
  sectionId?: string;
  heading?: string;
  intro?: string;
  executiveHeading?: string;
  executiveSubheading?: string;
  executiveTeam?: Array<{
    name?: string;
    title?: string;
    credential?: string;
    bio?: string;
    headshot?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    linkedin?: string;
    email?: string;
    _key: string;
  }>;
  advisoryHeading?: string;
  advisorySubheading?: string;
  advisors?: Array<{
    name?: string;
    role?: string;
    expertise?: string;
    bio?: string;
    _key: string;
  }>;
  ctaCard?: {
    heading?: string;
    body?: string;
    primaryCta?: {
      label?: string;
      href?: string;
    };
    secondaryCta?: {
      label?: string;
      href?: string;
    };
  };
};

export type StoriesImpact = {
  _type: "storiesImpact";
  sectionId?: string;
  heading?: string;
  intro?: string;
  stories?: Array<{
    quote?: string;
    name?: string;
    role?: string;
    location?: string;
    program?: string;
    _key: string;
  }>;
  statsCard?: {
    heading?: string;
    description?: string;
    stats?: Array<{
      value?: string;
      label?: string;
      color?: "primary" | "secondary" | "accent";
      _key: string;
    }>;
  };
};

export type MissionStatement = {
  _type: "missionStatement";
  sectionId?: string;
  heading?: string;
  mission?: string;
  pillars?: Array<{
    title?: string;
    description?: string;
    _key: string;
  }>;
  visionHeading?: string;
  vision?: string;
};

export type AboutOverview = {
  _type: "aboutOverview";
  sectionId?: string;
  heading?: string;
  intro?: Array<string>;
  pillars?: Array<{
    title?: string;
    description?: string;
    _key: string;
  }>;
  stats?: Array<{
    icon?: "users" | "calendar" | "globe" | "award" | "sparkles" | "book-open" | "heart";
    value?: string;
    label?: string;
    description?: string;
    _key: string;
  }>;
};

export type ChapterRequirements = {
  _type: "chapterRequirements";
  sectionId?: string;
  heading?: string;
  intro?: string;
  cards?: Array<{
    title?: string;
    icon?: "users" | "book-open" | "calendar" | "target" | "globe" | "heart" | "award" | "lightbulb" | "sparkles";
    tone?: "primary" | "secondary" | "accent" | "muted";
    points?: Array<string>;
    _key: string;
  }>;
  processCard?: {
    title?: string;
    steps?: Array<{
      label?: string;
      duration?: string;
      _key: string;
    }>;
  };
  metricsCard?: {
    title?: string;
    metrics?: Array<{
      label?: string;
      value?: string;
      _key: string;
    }>;
  };
};

export type ChapterApplication = {
  _type: "chapterApplication";
  sectionId?: string;
  kicker?: string;
  title?: string;
  description?: string;
  highlights?: Array<{
    icon?: "book-open" | "calendar" | "users" | "award" | "sparkles" | "lightbulb" | "handshake" | "graduation-cap";
    title?: string;
    body?: string;
    _type: "highlight";
    _key: string;
  }>;
  benefitsHeading?: string;
  benefitsIntro?: string;
  benefits?: Array<{
    title?: string;
    description?: string;
    _type: "benefit";
    _key: string;
  }>;
  cardTitle?: string;
  cardSubtitle?: string;
  cardFacts?: Array<{
    label?: string;
    value?: string;
    _type: "fact";
    _key: string;
  }>;
  cta?: {
    label?: string;
    href?: string;
  };
  cardFootnote?: string;
};

export type SplitImage = {
  _type: "splitImage";
  orientation?: "imageLeft" | "imageRight";
  title?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
};

export type NewsletterArchive = {
  _type: "newsletterArchive";
  heading?: string;
  description?: string;
  searchPlaceholder?: string;
  filterLabel?: string;
  newsletters?: Array<{
    title?: string;
    summary?: string;
    issue?: string;
    date?: string;
    readTime?: string;
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    href?: string;
    _key: string;
  }>;
  cta?: {
    title?: string;
    body?: string;
    disclaimer?: string;
    placeholder?: string;
    buttonLabel?: string;
    buttonHref?: string;
  };
  loadMoreLabel?: string;
};

export type ResourcesHero = {
  _type: "resourcesHero";
  heading?: string;
  tagline?: string;
  backgroundImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  overlayOpacity?: number;
  headingColor?: Color;
  taglineColor?: Color;
  highlights?: Array<{
    title?: string;
    description?: string;
    icon?: "book-open" | "headphones" | "file-text" | "archive" | "star" | "users" | "globe" | "heart" | "award" | "lightbulb";
    tone?: "primary" | "secondary" | "accent";
    _key: string;
  }>;
  highlightTitleColor?: Color;
  highlightBodyColor?: Color;
  enablePetalAnimation?: boolean;
  ctaLabel?: string;
  primaryCta?: {
    label?: string;
    href?: string;
  };
  secondaryCta?: {
    label?: string;
    href?: string;
  };
};

export type InitiativesGrid = {
  _type: "initiativesGrid";
  heading?: string;
  intro?: string;
  cards?: Array<{
    title?: string;
    description?: string;
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    alt?: string;
    cta?: {
      label?: string;
      href?: string;
    };
    _type: "card";
    _key: string;
  }>;
  sectionCta?: {
    label?: string;
    href?: string;
  };
};

export type Hero = {
  _type: "hero";
  title?: string;
  text?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      newTab?: boolean;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
    _key: string;
  } | {
    filename?: string;
    language?: "javascript" | "typescript" | "json" | "shell" | "markdown";
    code?: string;
    _type: "codeBlock";
    _key: string;
  } | {
    style?: string;
    _type: "divider";
    _key: string;
  }>;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
};

export type Features = {
  _type: "features";
  title?: string;
  features?: Array<{
    title?: string;
    text?: string;
    _type: "feature";
    _key: string;
  }>;
};

export type Faqs = {
  _type: "faqs";
  title?: string;
  faqs?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "faq";
  }>;
};

export type Faq = {
  _id: string;
  _type: "faq";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  body?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      newTab?: boolean;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
    _key: string;
  } | {
    filename?: string;
    language?: "javascript" | "typescript" | "json" | "shell" | "markdown";
    code?: string;
    _type: "codeBlock";
    _key: string;
  } | {
    style?: string;
    _type: "divider";
    _key: string;
  }>;
};

export type PageBuilder = Array<{
  _key: string;
} & HeroBanner | {
  _key: string;
} & Hero | {
  _key: string;
} & SplitImage | {
  _key: string;
} & Features | {
  _key: string;
} & ResourcesHero | {
  _key: string;
} & NewsletterArchive | {
  _key: string;
} & InitiativesGrid | {
  _key: string;
} & Faqs | {
  _key: string;
} & ChapterApplication | {
  _key: string;
} & ChapterRequirements | {
  _key: string;
} & AboutOverview | {
  _key: string;
} & MissionStatement | {
  _key: string;
} & StoriesImpact | {
  _key: string;
} & LeadershipSection | {
  _key: string;
} & PodcastHighlights | {
  _key: string;
} & WorkshopsDirectory | {
  _key: string;
} & VolunteersDirectory | {
  _key: string;
} & BrandPromos | {
  _key: string;
} & VolunteerTracks | {
  _key: string;
} & VolunteerBenefits | {
  _key: string;
} & VolunteerApplication>;

export type Page = {
  _id: string;
  _type: "page";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  content?: PageBuilder;
};

export type Event = {
  _id: string;
  _type: "event";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  description?: string;
  date?: string;
  location?: string;
  link?: string;
  needsVolunteer?: boolean;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  slug?: Slug;
};

export type Category = {
  _id: string;
  _type: "category";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  description?: string;
};

export type BlockContent = Array<{
  children?: Array<{
    marks?: Array<string>;
    text?: string;
    _type: "span";
    _key: string;
  }>;
  style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
  listItem?: "bullet" | "number";
  markDefs?: Array<{
    href?: string;
    newTab?: boolean;
    _type: "link";
    _key: string;
  }>;
  level?: number;
  _type: "block";
  _key: string;
} | {
  asset?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
  };
  media?: unknown;
  hotspot?: SanityImageHotspot;
  crop?: SanityImageCrop;
  _type: "image";
  _key: string;
} | {
  filename?: string;
  language?: "javascript" | "typescript" | "json" | "shell" | "markdown";
  code?: string;
  _type: "codeBlock";
  _key: string;
} | {
  style?: string;
  _type: "divider";
  _key: string;
}>;

export type BlogPost = {
  _id: string;
  _type: "blogPost";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  publishedAt?: string;
  mainImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  body?: BlockContent;
  categories?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "category";
  }>;
  author?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "author";
  };
  relatedBlogPosts?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "blogPost";
  }>;
};

export type Author = {
  _id: string;
  _type: "author";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  slug?: Slug;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  bio?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
};

export type Color = {
  _type: "color";
  hex?: string;
  alpha?: number;
  hsl?: HslaColor;
  hsv?: HsvaColor;
  rgb?: RgbaColor;
};

export type RgbaColor = {
  _type: "rgbaColor";
  r?: number;
  g?: number;
  b?: number;
  a?: number;
};

export type HsvaColor = {
  _type: "hsvaColor";
  h?: number;
  s?: number;
  v?: number;
  a?: number;
};

export type HslaColor = {
  _type: "hslaColor";
  h?: number;
  s?: number;
  l?: number;
  a?: number;
};

export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type Slug = {
  _type: "slug";
  current?: string;
  source?: string;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type AllSanitySchemaTypes = Brand | VolunteerOpportunity | WorkshopCategory | Workshop | ColorChoice | HeroBanner | SiteSettings | Newsletter | VolunteerApplication | VolunteerBenefits | VolunteerTracks | BrandPromos | VolunteersDirectory | WorkshopsDirectory | PodcastHighlights | LeadershipSection | StoriesImpact | MissionStatement | AboutOverview | ChapterRequirements | ChapterApplication | SplitImage | NewsletterArchive | ResourcesHero | InitiativesGrid | Hero | Features | Faqs | Faq | PageBuilder | Page | Event | Category | BlockContent | BlogPost | Author | Color | RgbaColor | HsvaColor | HslaColor | SanityImagePaletteSwatch | SanityImagePalette | SanityImageDimensions | SanityImageHotspot | SanityImageCrop | SanityFileAsset | SanityImageAsset | SanityImageMetadata | Geopoint | Slug | SanityAssetSourceData;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./src/sanity/lib/queries.ts
// Variable: BLOG_POSTS_QUERY
// Query: *[_type == "blogPost" && defined(slug.current)]    | order(publishedAt desc)[]{      _id,      title,      slug,      body,      mainImage,      publishedAt,      "categories": coalesce(        categories[]->{          _id,          slug,          title        },        []      ),      author->{        name,        image      }    }
export type BLOG_POSTS_QUERYResult = Array<{
  _id: string;
  title: string | null;
  slug: Slug | null;
  body: BlockContent | null;
  mainImage: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  } | null;
  publishedAt: string | null;
  categories: Array<{
    _id: string;
    slug: Slug | null;
    title: string | null;
  }> | Array<never>;
  author: {
    name: string | null;
    image: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    } | null;
  } | null;
}>;
// Variable: BLOG_POSTS_SLUGS_QUERY
// Query: *[_type == "blogPost" && defined(slug.current)]{    "slug": slug.current  }
export type BLOG_POSTS_SLUGS_QUERYResult = Array<{
  slug: string | null;
}>;
// Variable: BLOG_POST_QUERY
// Query: *[_type == "blogPost" && slug.current == $slug][0]{    _id,    title,    body,    mainImage,    publishedAt,    "categories": coalesce(      categories[]->{        _id,        slug,        title      },      []    ),    author->{      name,      image    },    relatedBlogPosts[] {      _key,      ...@->{ _id, title, slug }    }  }
export type BLOG_POST_QUERYResult = {
  _id: string;
  title: string | null;
  body: BlockContent | null;
  mainImage: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  } | null;
  publishedAt: string | null;
  categories: Array<{
    _id: string;
    slug: Slug | null;
    title: string | null;
  }> | Array<never>;
  author: {
    name: string | null;
    image: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    } | null;
  } | null;
  relatedBlogPosts: Array<{
    _key: string;
    _id: string;
    title: string | null;
    slug: Slug | null;
  }> | null;
} | null;
// Variable: NEWSLETTERS_QUERY
// Query: *[_type == "newsletter" && defined(slug.current)]    | order(publishedAt desc){      _id,      title,      "slug": slug.current,      issueLabel,      publishedAt,      readTime,      excerpt,      coverImage    }
export type NEWSLETTERS_QUERYResult = Array<{
  _id: string;
  title: string | null;
  slug: string | null;
  issueLabel: string | null;
  publishedAt: string | null;
  readTime: string | null;
  excerpt: string | null;
  coverImage: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  } | null;
}>;
// Variable: NEWSLETTER_QUERY
// Query: *[_type == "newsletter" && slug.current == $slug][0]{    _id,    title,    issueLabel,    publishedAt,    readTime,    excerpt,    coverImage,    body  }
export type NEWSLETTER_QUERYResult = {
  _id: string;
  title: string | null;
  issueLabel: string | null;
  publishedAt: string | null;
  readTime: string | null;
  excerpt: string | null;
  coverImage: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  } | null;
  body: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      newTab?: boolean;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    filename?: string;
    language?: "javascript" | "json" | "markdown" | "shell" | "typescript";
    code?: string;
    _type: "codeBlock";
    _key: string;
  } | {
    style?: string;
    _type: "divider";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
    _key: string;
  }> | null;
} | null;
// Variable: EVENTS_QUERY
// Query: *[_type == "event" && defined(slug.current)] | order(date asc)[0...20]{    _id,    title,    slug,    date,    location,    needsVolunteer  }
export type EVENTS_QUERYResult = Array<{
  _id: string;
  title: string | null;
  slug: Slug | null;
  date: string | null;
  location: string | null;
  needsVolunteer: boolean | null;
}>;
// Variable: EVENT_QUERY
// Query: *[_type == "event" && slug.current == $slug][0]{    _id,    title,    slug,    description,    date,    location,    link,    needsVolunteer,    image  }
export type EVENT_QUERYResult = {
  _id: string;
  title: string | null;
  slug: Slug | null;
  description: string | null;
  date: string | null;
  location: string | null;
  link: string | null;
  needsVolunteer: boolean | null;
  image: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  } | null;
} | null;
// Variable: PAGE_QUERY
// Query: *[_type == "page" && slug.current == $slug][0]{  _id,  _type,  title,  slug,  content[]{    ...,    _type == "heroBanner" => {      ...,      titleColor,      kickerColor,      bodyColor,      overlayOpacity    },    _type == "faqs" => {      ...,      faqs[]->    },    _type == "workshopsDirectory" => {      ...,      categoryCards[]->{        _id,        title,        slug,        icon,        description      },      "workshops": *[_type == "workshop"]        | order(start asc){          _id,          title,          "slug": slug.current,          summary,          categories[]->{            _id,            title,            slug,            icon,            description          },          start,          end,          location,          capacity,          registeredCount,          needsVolunteers,          registerUrl,          volunteerUrl,          heroImage        }    },    _type == "volunteersDirectory" => {      ...,      "opportunities": *[_type == "volunteerOpportunity"]        | order(title asc){          _id,          title,          "slug": slug.current,          summary,          trackLabel,          isUrgent,          isRemoteFriendly,          location,          commitmentSummary,          openings,          experienceLevel,          applyUrl,          heroImage,          contact{            ctaLabel          }        }    },    _type == "brandPromos" => {      ...,      brands[]->{        _id,        title,        kicker,        headline,        subhead,        footnote,        themeColor,        textColor,        imageOverlayStrength,        primaryCta{          label,          href        },        secondaryCta{          label,          href        },        promoLink{          href,          label        },        heroImage{          asset,          alt        },        logo{          asset,          alt        }      }    }  }}
export type PAGE_QUERYResult = {
  _id: string;
  _type: "page";
  title: string | null;
  slug: Slug | null;
  content: Array<{
    _key: string;
    _type: "aboutOverview";
    sectionId?: string;
    heading?: string;
    intro?: Array<string>;
    pillars?: Array<{
      title?: string;
      description?: string;
      _key: string;
    }>;
    stats?: Array<{
      icon?: "award" | "book-open" | "calendar" | "globe" | "heart" | "sparkles" | "users";
      value?: string;
      label?: string;
      description?: string;
      _key: string;
    }>;
  } | {
    _key: string;
    _type: "brandPromos";
    sectionId?: string;
    heading?: string;
    intro?: string;
    brands: Array<{
      _id: string;
      title: string | null;
      kicker: string | null;
      headline: string | null;
      subhead: string | null;
      footnote: string | null;
      themeColor: Color | null;
      textColor: Color | null;
      imageOverlayStrength: number | null;
      primaryCta: {
        label: string | null;
        href: string | null;
      } | null;
      secondaryCta: {
        label: string | null;
        href: string | null;
      } | null;
      promoLink: {
        href: string | null;
        label: string | null;
      } | null;
      heroImage: {
        asset: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        } | null;
        alt: string | null;
      } | null;
      logo: {
        asset: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        } | null;
        alt: string | null;
      } | null;
    }> | null;
  } | {
    _key: string;
    _type: "chapterApplication";
    sectionId?: string;
    kicker?: string;
    title?: string;
    description?: string;
    highlights?: Array<{
      icon?: "award" | "book-open" | "calendar" | "graduation-cap" | "handshake" | "lightbulb" | "sparkles" | "users";
      title?: string;
      body?: string;
      _type: "highlight";
      _key: string;
    }>;
    benefitsHeading?: string;
    benefitsIntro?: string;
    benefits?: Array<{
      title?: string;
      description?: string;
      _type: "benefit";
      _key: string;
    }>;
    cardTitle?: string;
    cardSubtitle?: string;
    cardFacts?: Array<{
      label?: string;
      value?: string;
      _type: "fact";
      _key: string;
    }>;
    cta?: {
      label?: string;
      href?: string;
    };
    cardFootnote?: string;
  } | {
    _key: string;
    _type: "chapterRequirements";
    sectionId?: string;
    heading?: string;
    intro?: string;
    cards?: Array<{
      title?: string;
      icon?: "award" | "book-open" | "calendar" | "globe" | "heart" | "lightbulb" | "sparkles" | "target" | "users";
      tone?: "accent" | "muted" | "primary" | "secondary";
      points?: Array<string>;
      _key: string;
    }>;
    processCard?: {
      title?: string;
      steps?: Array<{
        label?: string;
        duration?: string;
        _key: string;
      }>;
    };
    metricsCard?: {
      title?: string;
      metrics?: Array<{
        label?: string;
        value?: string;
        _key: string;
      }>;
    };
  } | {
    _key: string;
    _type: "faqs";
    title?: string;
    faqs: Array<{
      _id: string;
      _type: "faq";
      _createdAt: string;
      _updatedAt: string;
      _rev: string;
      title?: string;
      body?: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          newTab?: boolean;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      } | {
        filename?: string;
        language?: "javascript" | "json" | "markdown" | "shell" | "typescript";
        code?: string;
        _type: "codeBlock";
        _key: string;
      } | {
        style?: string;
        _type: "divider";
        _key: string;
      } | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
        _key: string;
      }>;
    }> | null;
  } | {
    _key: string;
    _type: "features";
    title?: string;
    features?: Array<{
      title?: string;
      text?: string;
      _type: "feature";
      _key: string;
    }>;
  } | {
    _key: string;
    _type: "hero";
    title?: string;
    text?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        newTab?: boolean;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      filename?: string;
      language?: "javascript" | "json" | "markdown" | "shell" | "typescript";
      code?: string;
      _type: "codeBlock";
      _key: string;
    } | {
      style?: string;
      _type: "divider";
      _key: string;
    } | {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
      _key: string;
    }>;
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
  } | {
    _key: string;
    _type: "heroBanner";
    background?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    overlayOpacity: number | null;
    title?: string;
    titleColor: Color | null;
    kicker?: string;
    kickerColor: Color | null;
    body?: string;
    bodyColor: Color | null;
    primaryCta?: {
      label?: string;
      href?: string;
    };
    secondaryCta?: {
      label?: string;
      href?: string;
    };
  } | {
    _key: string;
    _type: "initiativesGrid";
    heading?: string;
    intro?: string;
    cards?: Array<{
      title?: string;
      description?: string;
      image?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      alt?: string;
      cta?: {
        label?: string;
        href?: string;
      };
      _type: "card";
      _key: string;
    }>;
    sectionCta?: {
      label?: string;
      href?: string;
    };
  } | {
    _key: string;
    _type: "leadershipSection";
    sectionId?: string;
    heading?: string;
    intro?: string;
    executiveHeading?: string;
    executiveSubheading?: string;
    executiveTeam?: Array<{
      name?: string;
      title?: string;
      credential?: string;
      bio?: string;
      headshot?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      linkedin?: string;
      email?: string;
      _key: string;
    }>;
    advisoryHeading?: string;
    advisorySubheading?: string;
    advisors?: Array<{
      name?: string;
      role?: string;
      expertise?: string;
      bio?: string;
      _key: string;
    }>;
    ctaCard?: {
      heading?: string;
      body?: string;
      primaryCta?: {
        label?: string;
        href?: string;
      };
      secondaryCta?: {
        label?: string;
        href?: string;
      };
    };
  } | {
    _key: string;
    _type: "missionStatement";
    sectionId?: string;
    heading?: string;
    mission?: string;
    pillars?: Array<{
      title?: string;
      description?: string;
      _key: string;
    }>;
    visionHeading?: string;
    vision?: string;
  } | {
    _key: string;
    _type: "newsletterArchive";
    heading?: string;
    description?: string;
    searchPlaceholder?: string;
    filterLabel?: string;
    newsletters?: Array<{
      title?: string;
      summary?: string;
      issue?: string;
      date?: string;
      readTime?: string;
      image?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      href?: string;
      _key: string;
    }>;
    cta?: {
      title?: string;
      body?: string;
      disclaimer?: string;
      placeholder?: string;
      buttonLabel?: string;
      buttonHref?: string;
    };
    loadMoreLabel?: string;
  } | {
    _key: string;
    _type: "podcastHighlights";
    sectionId?: string;
    heading?: string;
    intro?: string;
    episodes?: Array<{
      episodeLabel?: string;
      duration?: string;
      publishedAt?: string;
      title?: string;
      guestName?: string;
      guestTitle?: string;
      programTag?: string;
      summary?: string;
      heroImage?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
      };
      youtubeUrl?: string;
      spotifyUrl?: string;
      appleUrl?: string;
      _key: string;
    }>;
    platformHeading?: string;
    platforms?: Array<{
      label?: string;
      href?: string;
      platform?: "apple" | "other" | "spotify" | "youtube";
      _key: string;
    }>;
    viewAllCta?: {
      label?: string;
      href?: string;
    };
  } | {
    _key: string;
    _type: "resourcesHero";
    heading?: string;
    tagline?: string;
    backgroundImage?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    overlayOpacity?: number;
    headingColor?: Color;
    taglineColor?: Color;
    highlights?: Array<{
      title?: string;
      description?: string;
      icon?: "archive" | "award" | "book-open" | "file-text" | "globe" | "headphones" | "heart" | "lightbulb" | "star" | "users";
      tone?: "accent" | "primary" | "secondary";
      _key: string;
    }>;
    highlightTitleColor?: Color;
    highlightBodyColor?: Color;
    enablePetalAnimation?: boolean;
    ctaLabel?: string;
    primaryCta?: {
      label?: string;
      href?: string;
    };
    secondaryCta?: {
      label?: string;
      href?: string;
    };
  } | {
    _key: string;
    _type: "splitImage";
    orientation?: "imageLeft" | "imageRight";
    title?: string;
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
  } | {
    _key: string;
    _type: "storiesImpact";
    sectionId?: string;
    heading?: string;
    intro?: string;
    stories?: Array<{
      quote?: string;
      name?: string;
      role?: string;
      location?: string;
      program?: string;
      _key: string;
    }>;
    statsCard?: {
      heading?: string;
      description?: string;
      stats?: Array<{
        value?: string;
        label?: string;
        color?: "accent" | "primary" | "secondary";
        _key: string;
      }>;
    };
  } | {
    _key: string;
    _type: "volunteerApplication";
    sectionId?: string;
    heading?: string;
    intro?: string;
    processHeading?: string;
    processSubheading?: string;
    steps?: Array<{
      title?: string;
      description?: string;
      timeEstimate?: string;
      _key: string;
    }>;
    requirementsHeading?: string;
    requirementsIntro?: string;
    requirements?: Array<string>;
    tracks?: Array<{
      title?: string;
      description?: string;
      tone?: "accent" | "primary" | "secondary";
      highlights?: Array<{
        icon?: "calendar" | "clock" | "globe" | "map" | "sparkles" | "users";
        label?: string;
        _key: string;
      }>;
      cta?: {
        label?: string;
        href?: string;
      };
      _key: string;
    }>;
    supportHeading?: string;
    supportBody?: string;
    supportLinks?: Array<{
      label?: string;
      href?: string;
      _key: string;
    }>;
  } | {
    _key: string;
    _type: "volunteerBenefits";
    sectionId?: string;
    heading?: string;
    intro?: string;
    benefits?: Array<{
      icon?: string;
      tone?: "accent" | "primary" | "secondary";
      title?: string;
      description?: string;
      points?: Array<string>;
      _type: "benefit";
      _key: string;
    }>;
    testimonialsHeading?: string;
    testimonialsIntro?: string;
    testimonials?: Array<{
      quote?: string;
      name?: string;
      role?: string;
      _type: "testimonial";
      _key: string;
    }>;
  } | {
    _key: string;
    _type: "volunteersDirectory";
    sectionId?: string;
    heading?: string;
    intro?: string;
    searchPlaceholder?: string;
    opportunities: Array<{
      _id: string;
      title: string | null;
      slug: string | null;
      summary: string | null;
      trackLabel: string | null;
      isUrgent: boolean | null;
      isRemoteFriendly: boolean | null;
      location: string | null;
      commitmentSummary: string | null;
      openings: number | null;
      experienceLevel: string | null;
      applyUrl: string | null;
      heroImage: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
      } | null;
      contact: {
        ctaLabel: string | null;
      } | null;
    }>;
  } | {
    _key: string;
    _type: "volunteerTracks";
    sectionId?: string;
    heading?: string;
    intro?: string;
    tracks?: Array<{
      badgeLabel?: string;
      tone?: "accent" | "muted" | "primary" | "secondary";
      icon?: string;
      title?: string;
      description?: string;
      keyAreasHeading?: string;
      keyAreas?: Array<string>;
      commitmentHeading?: string;
      commitmentItems?: Array<{
        icon?: string;
        text?: string;
        _type: "commitment";
        _key: string;
      }>;
      benefitsHeading?: string;
      benefits?: Array<string>;
      _type: "track";
      _key: string;
    }>;
    callout?: {
      heading?: string;
      body?: string;
      links?: Array<{
        label?: string;
        href?: string;
        _type: "link";
        _key: string;
      }>;
    };
  } | {
    _key: string;
    _type: "workshopsDirectory";
    sectionId?: string;
    heading?: string;
    intro?: string;
    searchPlaceholder?: string;
    categoryCards: Array<{
      _id: string;
      title: string | null;
      slug: Slug | null;
      icon: string | null;
      description: string | null;
    }> | null;
    showVolunteerBadge?: boolean;
    workshops: Array<{
      _id: string;
      title: string | null;
      slug: string | null;
      summary: string | null;
      categories: Array<{
        _id: string;
        title: string | null;
        slug: Slug | null;
        icon: string | null;
        description: string | null;
      }> | null;
      start: string | null;
      end: string | null;
      location: string | null;
      capacity: number | null;
      registeredCount: number | null;
      needsVolunteers: boolean | null;
      registerUrl: string | null;
      volunteerUrl: string | null;
      heroImage: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
      } | null;
    }>;
  }> | null;
} | null;
// Variable: HOME_PAGE_QUERY
// Query: *[_id == "siteSettings"][0]{  homePage->{    _id,    _type,    title,    slug,    content[]{      ...,      _type == "heroBanner" => {        ...,        titleColor,        kickerColor,        bodyColor,        overlayOpacity      },      _type == "faqs" => { ..., faqs[]-> },      _type == "workshopsDirectory" => {        ...,        categoryCards[]->{          _id,          title,          slug,          icon,          description        },        "workshops": *[_type == "workshop"]          | order(start asc){            _id,            title,            "slug": slug.current,            summary,            categories[]->{              _id,              title,              slug,              icon,              description            },            start,            end,            location,            capacity,            registeredCount,            needsVolunteers,            registerUrl,            volunteerUrl,            heroImage          }      }    },      _type == "volunteersDirectory" => {        ...,        "opportunities": *[_type == "volunteerOpportunity"]          | order(title asc){            _id,            title,            "slug": slug.current,            summary,            trackLabel,            isUrgent,            isRemoteFriendly,            location,            commitmentSummary,            openings,            experienceLevel,            applyUrl,            heroImage,            contact{              ctaLabel            }          }      },      _type == "brandPromos" => {        ...,        brands[]->{          _id,          title,          kicker,          headline,          subhead,        footnote,        themeColor,        textColor,        imageOverlayStrength,        primaryCta{          label,          href          },          secondaryCta{            label,            href          },        promoLink{          href,          label        },        heroImage{          asset,          alt        },        logo{          asset,          alt        }        }      }    }  }
export type HOME_PAGE_QUERYResult = {
  homePage: null;
} | {
  homePage: {
    _id: string;
    _type: "page";
    title: string | null;
    slug: Slug | null;
    content: Array<{
      _key: string;
      _type: "aboutOverview";
      sectionId?: string;
      heading?: string;
      intro?: Array<string>;
      pillars?: Array<{
        title?: string;
        description?: string;
        _key: string;
      }>;
      stats?: Array<{
        icon?: "award" | "book-open" | "calendar" | "globe" | "heart" | "sparkles" | "users";
        value?: string;
        label?: string;
        description?: string;
        _key: string;
      }>;
    } | {
      _key: string;
      _type: "brandPromos";
      sectionId?: string;
      heading?: string;
      intro?: string;
      brands?: Array<{
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        _key: string;
        [internalGroqTypeReferenceTo]?: "brand";
      }>;
    } | {
      _key: string;
      _type: "chapterApplication";
      sectionId?: string;
      kicker?: string;
      title?: string;
      description?: string;
      highlights?: Array<{
        icon?: "award" | "book-open" | "calendar" | "graduation-cap" | "handshake" | "lightbulb" | "sparkles" | "users";
        title?: string;
        body?: string;
        _type: "highlight";
        _key: string;
      }>;
      benefitsHeading?: string;
      benefitsIntro?: string;
      benefits?: Array<{
        title?: string;
        description?: string;
        _type: "benefit";
        _key: string;
      }>;
      cardTitle?: string;
      cardSubtitle?: string;
      cardFacts?: Array<{
        label?: string;
        value?: string;
        _type: "fact";
        _key: string;
      }>;
      cta?: {
        label?: string;
        href?: string;
      };
      cardFootnote?: string;
    } | {
      _key: string;
      _type: "chapterRequirements";
      sectionId?: string;
      heading?: string;
      intro?: string;
      cards?: Array<{
        title?: string;
        icon?: "award" | "book-open" | "calendar" | "globe" | "heart" | "lightbulb" | "sparkles" | "target" | "users";
        tone?: "accent" | "muted" | "primary" | "secondary";
        points?: Array<string>;
        _key: string;
      }>;
      processCard?: {
        title?: string;
        steps?: Array<{
          label?: string;
          duration?: string;
          _key: string;
        }>;
      };
      metricsCard?: {
        title?: string;
        metrics?: Array<{
          label?: string;
          value?: string;
          _key: string;
        }>;
      };
    } | {
      _key: string;
      _type: "faqs";
      title?: string;
      faqs: Array<{
        _id: string;
        _type: "faq";
        _createdAt: string;
        _updatedAt: string;
        _rev: string;
        title?: string;
        body?: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            href?: string;
            newTab?: boolean;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        } | {
          filename?: string;
          language?: "javascript" | "json" | "markdown" | "shell" | "typescript";
          code?: string;
          _type: "codeBlock";
          _key: string;
        } | {
          style?: string;
          _type: "divider";
          _key: string;
        } | {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
          _key: string;
        }>;
      }> | null;
    } | {
      _key: string;
      _type: "features";
      title?: string;
      features?: Array<{
        title?: string;
        text?: string;
        _type: "feature";
        _key: string;
      }>;
    } | {
      _key: string;
      _type: "hero";
      title?: string;
      text?: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          newTab?: boolean;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      } | {
        filename?: string;
        language?: "javascript" | "json" | "markdown" | "shell" | "typescript";
        code?: string;
        _type: "codeBlock";
        _key: string;
      } | {
        style?: string;
        _type: "divider";
        _key: string;
      } | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
        _key: string;
      }>;
      image?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
    } | {
      _key: string;
      _type: "heroBanner";
      background?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      overlayOpacity: number | null;
      title?: string;
      titleColor: Color | null;
      kicker?: string;
      kickerColor: Color | null;
      body?: string;
      bodyColor: Color | null;
      primaryCta?: {
        label?: string;
        href?: string;
      };
      secondaryCta?: {
        label?: string;
        href?: string;
      };
    } | {
      _key: string;
      _type: "initiativesGrid";
      heading?: string;
      intro?: string;
      cards?: Array<{
        title?: string;
        description?: string;
        image?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
        };
        alt?: string;
        cta?: {
          label?: string;
          href?: string;
        };
        _type: "card";
        _key: string;
      }>;
      sectionCta?: {
        label?: string;
        href?: string;
      };
    } | {
      _key: string;
      _type: "leadershipSection";
      sectionId?: string;
      heading?: string;
      intro?: string;
      executiveHeading?: string;
      executiveSubheading?: string;
      executiveTeam?: Array<{
        name?: string;
        title?: string;
        credential?: string;
        bio?: string;
        headshot?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
        };
        linkedin?: string;
        email?: string;
        _key: string;
      }>;
      advisoryHeading?: string;
      advisorySubheading?: string;
      advisors?: Array<{
        name?: string;
        role?: string;
        expertise?: string;
        bio?: string;
        _key: string;
      }>;
      ctaCard?: {
        heading?: string;
        body?: string;
        primaryCta?: {
          label?: string;
          href?: string;
        };
        secondaryCta?: {
          label?: string;
          href?: string;
        };
      };
    } | {
      _key: string;
      _type: "missionStatement";
      sectionId?: string;
      heading?: string;
      mission?: string;
      pillars?: Array<{
        title?: string;
        description?: string;
        _key: string;
      }>;
      visionHeading?: string;
      vision?: string;
    } | {
      _key: string;
      _type: "newsletterArchive";
      heading?: string;
      description?: string;
      searchPlaceholder?: string;
      filterLabel?: string;
      newsletters?: Array<{
        title?: string;
        summary?: string;
        issue?: string;
        date?: string;
        readTime?: string;
        image?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
        };
        href?: string;
        _key: string;
      }>;
      cta?: {
        title?: string;
        body?: string;
        disclaimer?: string;
        placeholder?: string;
        buttonLabel?: string;
        buttonHref?: string;
      };
      loadMoreLabel?: string;
    } | {
      _key: string;
      _type: "podcastHighlights";
      sectionId?: string;
      heading?: string;
      intro?: string;
      episodes?: Array<{
        episodeLabel?: string;
        duration?: string;
        publishedAt?: string;
        title?: string;
        guestName?: string;
        guestTitle?: string;
        programTag?: string;
        summary?: string;
        heroImage?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
        };
        youtubeUrl?: string;
        spotifyUrl?: string;
        appleUrl?: string;
        _key: string;
      }>;
      platformHeading?: string;
      platforms?: Array<{
        label?: string;
        href?: string;
        platform?: "apple" | "other" | "spotify" | "youtube";
        _key: string;
      }>;
      viewAllCta?: {
        label?: string;
        href?: string;
      };
    } | {
      _key: string;
      _type: "resourcesHero";
      heading?: string;
      tagline?: string;
      backgroundImage?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      overlayOpacity?: number;
      headingColor?: Color;
      taglineColor?: Color;
      highlights?: Array<{
        title?: string;
        description?: string;
        icon?: "archive" | "award" | "book-open" | "file-text" | "globe" | "headphones" | "heart" | "lightbulb" | "star" | "users";
        tone?: "accent" | "primary" | "secondary";
        _key: string;
      }>;
      highlightTitleColor?: Color;
      highlightBodyColor?: Color;
      enablePetalAnimation?: boolean;
      ctaLabel?: string;
      primaryCta?: {
        label?: string;
        href?: string;
      };
      secondaryCta?: {
        label?: string;
        href?: string;
      };
    } | {
      _key: string;
      _type: "splitImage";
      orientation?: "imageLeft" | "imageRight";
      title?: string;
      image?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
    } | {
      _key: string;
      _type: "storiesImpact";
      sectionId?: string;
      heading?: string;
      intro?: string;
      stories?: Array<{
        quote?: string;
        name?: string;
        role?: string;
        location?: string;
        program?: string;
        _key: string;
      }>;
      statsCard?: {
        heading?: string;
        description?: string;
        stats?: Array<{
          value?: string;
          label?: string;
          color?: "accent" | "primary" | "secondary";
          _key: string;
        }>;
      };
    } | {
      _key: string;
      _type: "volunteerApplication";
      sectionId?: string;
      heading?: string;
      intro?: string;
      processHeading?: string;
      processSubheading?: string;
      steps?: Array<{
        title?: string;
        description?: string;
        timeEstimate?: string;
        _key: string;
      }>;
      requirementsHeading?: string;
      requirementsIntro?: string;
      requirements?: Array<string>;
      tracks?: Array<{
        title?: string;
        description?: string;
        tone?: "accent" | "primary" | "secondary";
        highlights?: Array<{
          icon?: "calendar" | "clock" | "globe" | "map" | "sparkles" | "users";
          label?: string;
          _key: string;
        }>;
        cta?: {
          label?: string;
          href?: string;
        };
        _key: string;
      }>;
      supportHeading?: string;
      supportBody?: string;
      supportLinks?: Array<{
        label?: string;
        href?: string;
        _key: string;
      }>;
    } | {
      _key: string;
      _type: "volunteerBenefits";
      sectionId?: string;
      heading?: string;
      intro?: string;
      benefits?: Array<{
        icon?: string;
        tone?: "accent" | "primary" | "secondary";
        title?: string;
        description?: string;
        points?: Array<string>;
        _type: "benefit";
        _key: string;
      }>;
      testimonialsHeading?: string;
      testimonialsIntro?: string;
      testimonials?: Array<{
        quote?: string;
        name?: string;
        role?: string;
        _type: "testimonial";
        _key: string;
      }>;
    } | {
      _key: string;
      _type: "volunteersDirectory";
      sectionId?: string;
      heading?: string;
      intro?: string;
      searchPlaceholder?: string;
    } | {
      _key: string;
      _type: "volunteerTracks";
      sectionId?: string;
      heading?: string;
      intro?: string;
      tracks?: Array<{
        badgeLabel?: string;
        tone?: "accent" | "muted" | "primary" | "secondary";
        icon?: string;
        title?: string;
        description?: string;
        keyAreasHeading?: string;
        keyAreas?: Array<string>;
        commitmentHeading?: string;
        commitmentItems?: Array<{
          icon?: string;
          text?: string;
          _type: "commitment";
          _key: string;
        }>;
        benefitsHeading?: string;
        benefits?: Array<string>;
        _type: "track";
        _key: string;
      }>;
      callout?: {
        heading?: string;
        body?: string;
        links?: Array<{
          label?: string;
          href?: string;
          _type: "link";
          _key: string;
        }>;
      };
    } | {
      _key: string;
      _type: "workshopsDirectory";
      sectionId?: string;
      heading?: string;
      intro?: string;
      searchPlaceholder?: string;
      categoryCards: Array<{
        _id: string;
        title: string | null;
        slug: Slug | null;
        icon: string | null;
        description: string | null;
      }> | null;
      showVolunteerBadge?: boolean;
      workshops: Array<{
        _id: string;
        title: string | null;
        slug: string | null;
        summary: string | null;
        categories: Array<{
          _id: string;
          title: string | null;
          slug: Slug | null;
          icon: string | null;
          description: string | null;
        }> | null;
        start: string | null;
        end: string | null;
        location: string | null;
        capacity: number | null;
        registeredCount: number | null;
        needsVolunteers: boolean | null;
        registerUrl: string | null;
        volunteerUrl: string | null;
        heroImage: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
        } | null;
      }>;
    }> | null;
  } | null;
} | null;
// Variable: WORKSHOPS_QUERY
// Query: *[_type == "workshop"]    | order(start asc){      _id,      title,      "slug": slug.current,      summary,      categories,      start,      end,      location,      capacity,      registeredCount,      needsVolunteers,      registerUrl,      volunteerUrl,      heroImage,      categories[]->{        _id,        title,        slug,        icon,        description      }    }
export type WORKSHOPS_QUERYResult = Array<{
  _id: string;
  title: string | null;
  slug: string | null;
  summary: string | null;
  categories: Array<{
    _id: string;
    title: string | null;
    slug: Slug | null;
    icon: string | null;
    description: string | null;
  }> | null;
  start: string | null;
  end: string | null;
  location: string | null;
  capacity: number | null;
  registeredCount: number | null;
  needsVolunteers: boolean | null;
  registerUrl: string | null;
  volunteerUrl: string | null;
  heroImage: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  } | null;
}>;
// Variable: WORKSHOP_QUERY
// Query: *[_type == "workshop" && slug.current == $slug][0]{    _id,    title,    "slug": slug.current,    summary,    categories[]->{      _id,      title,      slug,      icon,      description    },    start,    end,    location,    capacity,    registeredCount,    needsVolunteers,    registerUrl,    volunteerUrl,    heroImage,    hosts[]{      _key,      name,      role,      avatar,      socialLinks[]{        _key,        label,        url      }    },    contact{      ctaLabel,      instructions,      email,      phone,      responseNote    },    externalLinks[]{      _key,      label,      href    },    body  }
export type WORKSHOP_QUERYResult = {
  _id: string;
  title: string | null;
  slug: string | null;
  summary: string | null;
  categories: Array<{
    _id: string;
    title: string | null;
    slug: Slug | null;
    icon: string | null;
    description: string | null;
  }> | null;
  start: string | null;
  end: string | null;
  location: string | null;
  capacity: number | null;
  registeredCount: number | null;
  needsVolunteers: boolean | null;
  registerUrl: string | null;
  volunteerUrl: string | null;
  heroImage: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  } | null;
  hosts: Array<{
    _key: string;
    name: string | null;
    role: string | null;
    avatar: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    } | null;
    socialLinks: Array<{
      _key: string;
      label: string | null;
      url: string | null;
    }> | null;
  }> | null;
  contact: {
    ctaLabel: string | null;
    instructions: string | null;
    email: string | null;
    phone: string | null;
    responseNote: string | null;
  } | null;
  externalLinks: Array<{
    _key: string;
    label: string | null;
    href: string | null;
  }> | null;
  body: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      newTab?: boolean;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    filename?: string;
    language?: "javascript" | "json" | "markdown" | "shell" | "typescript";
    code?: string;
    _type: "codeBlock";
    _key: string;
  } | {
    style?: string;
    _type: "divider";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
    _key: string;
  }> | null;
} | null;
// Variable: WORKSHOP_SLUGS_QUERY
// Query: *[_type == "workshop" && defined(slug.current)]{    "slug": slug.current  }
export type WORKSHOP_SLUGS_QUERYResult = Array<{
  slug: string | null;
}>;
// Variable: VOLUNTEERS_QUERY
// Query: *[_type == "volunteerOpportunity"]    | order(title asc){      _id,      title,      "slug": slug.current,      summary,      trackLabel,      isUrgent,      isRemoteFriendly,      location,      commitmentSummary,      openings,      experienceLevel,      applyUrl,      heroImage,      contact{        ctaLabel      }    }
export type VOLUNTEERS_QUERYResult = Array<{
  _id: string;
  title: string | null;
  slug: string | null;
  summary: string | null;
  trackLabel: string | null;
  isUrgent: boolean | null;
  isRemoteFriendly: boolean | null;
  location: string | null;
  commitmentSummary: string | null;
  openings: number | null;
  experienceLevel: string | null;
  applyUrl: string | null;
  heroImage: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  } | null;
  contact: {
    ctaLabel: string | null;
  } | null;
}>;
// Variable: VOLUNTEER_QUERY
// Query: *[_type == "volunteerOpportunity" && slug.current == $slug][0]{    _id,    title,    "slug": slug.current,    summary,    trackLabel,    isUrgent,    isRemoteFriendly,    location,    commitmentSummary,    openings,    experienceLevel,    applyUrl,    heroImage,    responsibilities,    qualifications,    benefits,    applicationProcess[]{      _key,      title,      description    },    contact{      ctaLabel,      instructions,      email,      phone,      responseNote    },    body  }
export type VOLUNTEER_QUERYResult = {
  _id: string;
  title: string | null;
  slug: string | null;
  summary: string | null;
  trackLabel: string | null;
  isUrgent: boolean | null;
  isRemoteFriendly: boolean | null;
  location: string | null;
  commitmentSummary: string | null;
  openings: number | null;
  experienceLevel: string | null;
  applyUrl: string | null;
  heroImage: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  } | null;
  responsibilities: Array<string> | null;
  qualifications: Array<string> | null;
  benefits: Array<string> | null;
  applicationProcess: Array<{
    _key: string;
    title: string | null;
    description: string | null;
  }> | null;
  contact: {
    ctaLabel: string | null;
    instructions: string | null;
    email: string | null;
    phone: string | null;
    responseNote: string | null;
  } | null;
  body: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      newTab?: boolean;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    filename?: string;
    language?: "javascript" | "json" | "markdown" | "shell" | "typescript";
    code?: string;
    _type: "codeBlock";
    _key: string;
  } | {
    style?: string;
    _type: "divider";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
    _key: string;
  }> | null;
} | null;
// Variable: VOLUNTEER_SLUGS_QUERY
// Query: *[_type in ["volunteerOpportunity", "volunteerOPportunity"] && defined(slug.current)]{    "slug": slug.current  }
export type VOLUNTEER_SLUGS_QUERYResult = Array<{
  slug: string | null;
}>;
// Variable: SITE_SETTINGS_QUERY
// Query: *[_id == "siteSettings"][0]{  logo,  orgName,  footerBlurb,  social{    facebook, twitter, instagram, youtube  },  quickLinks[]{    _key, label, href  },  contactEmail,  contactPhone,  address,  newsletter{    enabled, blurb  }}
export type SITE_SETTINGS_QUERYResult = {
  logo: null;
  orgName: null;
  footerBlurb: null;
  social: null;
  quickLinks: null;
  contactEmail: null;
  contactPhone: null;
  address: null;
  newsletter: null;
} | {
  logo: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  } | null;
  orgName: null;
  footerBlurb: null;
  social: null;
  quickLinks: null;
  contactEmail: null;
  contactPhone: null;
  address: null;
  newsletter: null;
} | {
  logo: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  } | null;
  orgName: string | null;
  footerBlurb: string | null;
  social: {
    facebook: string | null;
    twitter: string | null;
    instagram: string | null;
    youtube: string | null;
  } | null;
  quickLinks: Array<{
    _key: string;
    label: string | null;
    href: string | null;
  }> | null;
  contactEmail: string | null;
  contactPhone: string | null;
  address: Array<string> | null;
  newsletter: {
    enabled: boolean | null;
    blurb: string | null;
  } | null;
} | null;

// Query TypeMap
import "@sanity/client";
declare module "@sanity/client" {
  interface SanityQueries {
    "\n  *[_type == \"blogPost\" && defined(slug.current)]\n    | order(publishedAt desc)[]{\n      _id,\n      title,\n      slug,\n      body,\n      mainImage,\n      publishedAt,\n      \"categories\": coalesce(\n        categories[]->{\n          _id,\n          slug,\n          title\n        },\n        []\n      ),\n      author->{\n        name,\n        image\n      }\n    }\n": BLOG_POSTS_QUERYResult;
    "\n  *[_type == \"blogPost\" && defined(slug.current)]{\n    \"slug\": slug.current\n  }\n": BLOG_POSTS_SLUGS_QUERYResult;
    "\n  *[_type == \"blogPost\" && slug.current == $slug][0]{\n    _id,\n    title,\n    body,\n    mainImage,\n    publishedAt,\n    \"categories\": coalesce(\n      categories[]->{\n        _id,\n        slug,\n        title\n      },\n      []\n    ),\n    author->{\n      name,\n      image\n    },\n    relatedBlogPosts[] {\n      _key,\n      ...@->{ _id, title, slug }\n    }\n  }\n": BLOG_POST_QUERYResult;
    "\n  *[_type == \"newsletter\" && defined(slug.current)]\n    | order(publishedAt desc){\n      _id,\n      title,\n      \"slug\": slug.current,\n      issueLabel,\n      publishedAt,\n      readTime,\n      excerpt,\n      coverImage\n    }\n": NEWSLETTERS_QUERYResult;
    "\n  *[_type == \"newsletter\" && slug.current == $slug][0]{\n    _id,\n    title,\n    issueLabel,\n    publishedAt,\n    readTime,\n    excerpt,\n    coverImage,\n    body\n  }\n": NEWSLETTER_QUERYResult;
    "\n  *[_type == \"event\" && defined(slug.current)] | order(date asc)[0...20]{\n    _id,\n    title,\n    slug,\n    date,\n    location,\n    needsVolunteer\n  }\n": EVENTS_QUERYResult;
    "\n  *[_type == \"event\" && slug.current == $slug][0]{\n    _id,\n    title,\n    slug,\n    description,\n    date,\n    location,\n    link,\n    needsVolunteer,\n    image\n  }\n": EVENT_QUERYResult;
    "\n*[_type == \"page\" && slug.current == $slug][0]{\n  _id,\n  _type,\n  title,\n  slug,\n  content[]{\n    ...,\n    _type == \"heroBanner\" => {\n      ...,\n      titleColor,\n      kickerColor,\n      bodyColor,\n      overlayOpacity\n    },\n    _type == \"faqs\" => {\n      ...,\n      faqs[]->\n    },\n    _type == \"workshopsDirectory\" => {\n      ...,\n      categoryCards[]->{\n        _id,\n        title,\n        slug,\n        icon,\n        description\n      },\n      \"workshops\": *[_type == \"workshop\"]\n        | order(start asc){\n          _id,\n          title,\n          \"slug\": slug.current,\n          summary,\n          categories[]->{\n            _id,\n            title,\n            slug,\n            icon,\n            description\n          },\n          start,\n          end,\n          location,\n          capacity,\n          registeredCount,\n          needsVolunteers,\n          registerUrl,\n          volunteerUrl,\n          heroImage\n        }\n    },\n    _type == \"volunteersDirectory\" => {\n      ...,\n      \"opportunities\": *[_type == \"volunteerOpportunity\"]\n        | order(title asc){\n          _id,\n          title,\n          \"slug\": slug.current,\n          summary,\n          trackLabel,\n          isUrgent,\n          isRemoteFriendly,\n          location,\n          commitmentSummary,\n          openings,\n          experienceLevel,\n          applyUrl,\n          heroImage,\n          contact{\n            ctaLabel\n          }\n        }\n    },\n    _type == \"brandPromos\" => {\n      ...,\n      brands[]->{\n        _id,\n        title,\n        kicker,\n        headline,\n        subhead,\n        footnote,\n        themeColor,\n        textColor,\n        imageOverlayStrength,\n        primaryCta{\n          label,\n          href\n        },\n        secondaryCta{\n          label,\n          href\n        },\n        promoLink{\n          href,\n          label\n        },\n        heroImage{\n          asset,\n          alt\n        },\n        logo{\n          asset,\n          alt\n        }\n      }\n    }\n  }\n}\n": PAGE_QUERYResult;
    "\n*[_id == \"siteSettings\"][0]{\n  homePage->{\n    _id,\n    _type,\n    title,\n    slug,\n    content[]{\n      ...,\n      _type == \"heroBanner\" => {\n        ...,\n        titleColor,\n        kickerColor,\n        bodyColor,\n        overlayOpacity\n      },\n      _type == \"faqs\" => { ..., faqs[]-> },\n      _type == \"workshopsDirectory\" => {\n        ...,\n        categoryCards[]->{\n          _id,\n          title,\n          slug,\n          icon,\n          description\n        },\n        \"workshops\": *[_type == \"workshop\"]\n          | order(start asc){\n            _id,\n            title,\n            \"slug\": slug.current,\n            summary,\n            categories[]->{\n              _id,\n              title,\n              slug,\n              icon,\n              description\n            },\n            start,\n            end,\n            location,\n            capacity,\n            registeredCount,\n            needsVolunteers,\n            registerUrl,\n            volunteerUrl,\n            heroImage\n          }\n      }\n    },\n      _type == \"volunteersDirectory\" => {\n        ...,\n        \"opportunities\": *[_type == \"volunteerOpportunity\"]\n          | order(title asc){\n            _id,\n            title,\n            \"slug\": slug.current,\n            summary,\n            trackLabel,\n            isUrgent,\n            isRemoteFriendly,\n            location,\n            commitmentSummary,\n            openings,\n            experienceLevel,\n            applyUrl,\n            heroImage,\n            contact{\n              ctaLabel\n            }\n          }\n      },\n      _type == \"brandPromos\" => {\n        ...,\n        brands[]->{\n          _id,\n          title,\n          kicker,\n          headline,\n          subhead,\n        footnote,\n        themeColor,\n        textColor,\n        imageOverlayStrength,\n        primaryCta{\n          label,\n          href\n          },\n          secondaryCta{\n            label,\n            href\n          },\n        promoLink{\n          href,\n          label\n        },\n        heroImage{\n          asset,\n          alt\n        },\n        logo{\n          asset,\n          alt\n        }\n        }\n      }\n    }\n  }\n": HOME_PAGE_QUERYResult;
    "\n  *[_type == \"workshop\"]\n    | order(start asc){\n      _id,\n      title,\n      \"slug\": slug.current,\n      summary,\n      categories,\n      start,\n      end,\n      location,\n      capacity,\n      registeredCount,\n      needsVolunteers,\n      registerUrl,\n      volunteerUrl,\n      heroImage,\n      categories[]->{\n        _id,\n        title,\n        slug,\n        icon,\n        description\n      }\n    }\n": WORKSHOPS_QUERYResult;
    "\n  *[_type == \"workshop\" && slug.current == $slug][0]{\n    _id,\n    title,\n    \"slug\": slug.current,\n    summary,\n    categories[]->{\n      _id,\n      title,\n      slug,\n      icon,\n      description\n    },\n    start,\n    end,\n    location,\n    capacity,\n    registeredCount,\n    needsVolunteers,\n    registerUrl,\n    volunteerUrl,\n    heroImage,\n    hosts[]{\n      _key,\n      name,\n      role,\n      avatar,\n      socialLinks[]{\n        _key,\n        label,\n        url\n      }\n    },\n    contact{\n      ctaLabel,\n      instructions,\n      email,\n      phone,\n      responseNote\n    },\n    externalLinks[]{\n      _key,\n      label,\n      href\n    },\n    body\n  }\n": WORKSHOP_QUERYResult;
    "\n  *[_type == \"workshop\" && defined(slug.current)]{\n    \"slug\": slug.current\n  }\n": WORKSHOP_SLUGS_QUERYResult;
    "\n  *[_type == \"volunteerOpportunity\"]\n    | order(title asc){\n      _id,\n      title,\n      \"slug\": slug.current,\n      summary,\n      trackLabel,\n      isUrgent,\n      isRemoteFriendly,\n      location,\n      commitmentSummary,\n      openings,\n      experienceLevel,\n      applyUrl,\n      heroImage,\n      contact{\n        ctaLabel\n      }\n    }\n": VOLUNTEERS_QUERYResult;
    "\n  *[_type == \"volunteerOpportunity\" && slug.current == $slug][0]{\n    _id,\n    title,\n    \"slug\": slug.current,\n    summary,\n    trackLabel,\n    isUrgent,\n    isRemoteFriendly,\n    location,\n    commitmentSummary,\n    openings,\n    experienceLevel,\n    applyUrl,\n    heroImage,\n    responsibilities,\n    qualifications,\n    benefits,\n    applicationProcess[]{\n      _key,\n      title,\n      description\n    },\n    contact{\n      ctaLabel,\n      instructions,\n      email,\n      phone,\n      responseNote\n    },\n    body\n  }\n": VOLUNTEER_QUERYResult;
    "\n  *[_type in [\"volunteerOpportunity\", \"volunteerOPportunity\"] && defined(slug.current)]{\n    \"slug\": slug.current\n  }\n": VOLUNTEER_SLUGS_QUERYResult;
    "\n*[_id == \"siteSettings\"][0]{\n  logo,\n  orgName,\n  footerBlurb,\n  social{\n    facebook, twitter, instagram, youtube\n  },\n  quickLinks[]{\n    _key, label, href\n  },\n  contactEmail,\n  contactPhone,\n  address,\n  newsletter{\n    enabled, blurb\n  }\n}\n": SITE_SETTINGS_QUERYResult;
  }
}
